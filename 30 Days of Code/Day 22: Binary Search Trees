// https://www.hackerrank.com/challenges/30-binary-search-trees
// C++

#include <iostream>
#include <cstddef>

using namespace std;    

class Node{
   public:
       int data;
       Node *left;
       Node *right;
       Node(int d){
           data = d;
           left = NULL;
           right = NULL;
       }
};

class Solution{
   public:
       Node* insert(Node* root, int data) {
           if(root == NULL) {
               return new Node(data);
           }
           else {
               Node* cur;
               if(data <= root->data){
                   cur = insert(root->left, data);
                   root->left = cur;
               }
               else{
                   cur = insert(root->right, data);
                   root->right = cur;
              }

              return root;
          }
       }

        int getHeight(Node* root){
           int leftHeight = 0, rightHeight = 0;

           if (root == NULL)
           {
               return 0;
           }

           if (root->left == NULL && root->right == NULL)
           {
               return 0;
           }

           leftHeight = getHeight(root->left);
           rightHeight = getHeight(root->right);

           if (leftHeight > rightHeight)
           {
               return leftHeight + 1;
           } else {
               return rightHeight + 1;
           }
       }

}; //End of Solution
