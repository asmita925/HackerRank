// https://www.hackerrank.com/challenges/30-linked-list-deletion
// C++

#include <cstddef>
#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;    
class Node
{
   public:
       int data;
       Node *next;
       Node (int d){
           data=d;
           next=NULL;
       }
};
class Solution{
   public:

         Node* removeDuplicates(Node *head)
         {
               Node * temp;

               if (head == NULL || head->next == NULL)
               {
                   return head;
               }

               temp = head;

               while (temp && temp->next)
               {
                   if (temp->data == temp->next->data)
                   {
                       temp->next = temp->next->next;
                   } else {
                       temp = temp->next;
                   }
               } // end of while loop

               return head;
         } // end of func

         Node* insert (Node *head,int data)
         {
              Node* p=new Node(data);
              if (head==NULL){
                  head=p; 

              }
              else if (head->next==NULL){
                  head->next=p;

              }
              else {
                  Node *start=head;
                  while(start->next!=NULL){
                      start=start->next;
                  }
                  start->next=p;
              }
       
              return head;   
         }
         
         void display(Node *head)
         {
                 Node *start=head;
                   while (start)
                   {
                       cout<<start->data<<" ";
                       start=start->next;
                   }
          }
};
